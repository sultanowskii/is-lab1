version: '3.9'
services:
  app:
    build:
      context: .
      dockerfile: app.Dockerfile
    container_name: is-lab1
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: is1
      JWT_KEY: ${JWT_KEY}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_URL: http://minio:9000
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    ports:
      - 8080:8080
    depends_on:
      - db
      - redis
    networks:
      - app-network

  db:
    image: postgres:16
    container_name: postgres-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: is1
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - 9000:9000
      - ${MINIO_CONSOLE_PORT}:9001
    networks:
      - app-network
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
  minio-data:
